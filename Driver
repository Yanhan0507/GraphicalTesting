// Driver file, can read control signal(output of printer), can then using awt.robot class 
// to simulate the input from keyboard to control the game.

import java.awt.AWTException;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;

import javax.imageio.ImageIO;


import com.sun.jna.platform.win32.User32;
import com.sun.jna.platform.win32.WinDef;
import com.sun.jna.platform.win32.WinDef.HWND;

public class RobotDemo {
	private Robot robot = null;
	private String fileName; // Œƒº˛µƒ«∞◊∫
	private String defaultName = "GuiCamera";
	static int serialNum = 0;
	private String imageFormat; // ÕºœÒŒƒº˛µƒ∏Ò Ω
	private String defaultImageFormat = "png";
	Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
	Rectangle screenRectangle;
	

	public RobotDemo() {
		try {
			robot = new Robot();
		} catch (AWTException e) {
			e.printStackTrace();
		}

		// GuiCamera()
		fileName = defaultName;
		imageFormat = defaultImageFormat;
		screenRectangle = new Rectangle(0, 0, 0, 0);
	}

	public RobotDemo(String s, String format) {
		try {
			robot = new Robot();
		} catch (AWTException e) {
			e.printStackTrace();
		}

		// GuiCamera()
		fileName = s;
		imageFormat = format;
		screenRectangle = new Rectangle(0, 0, 0, 0);
	}

	public void initialDemo() {
		robot.delay(1000);
		HWND hwnd = User32.INSTANCE.GetForegroundWindow();
		hwnd.getPointer();
		WinDef.RECT WinScr = new WinDef.RECT();
		User32.INSTANCE.GetWindowRect(hwnd, WinScr);
		screenRectangle.setRect((double) WinScr.left, (double) WinScr.top,
				(double) (WinScr.right - WinScr.left),
				(double) (WinScr.bottom - WinScr.top));
		// System.out.println("Top: " + WinScr.top);
		// System.out.println("Bottom: " + WinScr.bottom);
		// System.out.println("Left: " + WinScr.left);
		// System.out.println("Right: " + WinScr.right);
	}

	public void snapShot() {

		try {
			for(int i = 0; i < 100; i++){
				serialNum = serialNum + 1;
				robot.delay(1);
				BufferedImage screenshot = (new Robot())
						.createScreenCapture(screenRectangle);
				String name = fileName + String.format("%1$03d", serialNum) + "."
						+ imageFormat;
				System.out.println("111");
				File f = new File(name);
				ImageIO.write(screenshot, imageFormat, f);
				
				//System.out.println(serialNum);
			}

		} catch (Exception ex) {
			System.out.println(ex);
		}
	}


    private class Driver implements Runnable {  
  	  
        public void run() { 
        	int i = 0;
        	FileReader fr;
        	BufferedReader br;
        	String str = "";
			try {
				fr = new FileReader("D:/2015Spring/Java_Project/Yanhan/abc.txt");
				br = new BufferedReader(fr);
				str = br.readLine();
		        while (i<1000) {  
		        	i++;
		            try {  
		                Thread.sleep(300);  
		            } catch (InterruptedException e) {  
		                e.printStackTrace();  
		            }  
		            str = br.readLine();
		            helper(str);  
		        }  
			}catch (Exception e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
        }  
  
    } 
	
	
    private void helper(String str){	  
    	
    	if(str.equals("control")){
    		robot.keyPress(KeyEvent.VK_CONTROL);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_CONTROL);
    	}
    	else if(str.equals("X")){
    		robot.keyPress(KeyEvent.VK_X);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_X);
    	}
    	else if(str.equals("A")){
    		robot.keyPress(KeyEvent.VK_A);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_A);
    	}
    	else if(str.equals("left")){
    		robot.keyPress(KeyEvent.VK_LEFT);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_LEFT);
    	}
    	else if(str.equals("right")){
    		robot.keyPress(KeyEvent.VK_RIGHT);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_RIGHT);
    	}
    	else if(str.equals("up")){
    		robot.keyPress(KeyEvent.VK_UP);    		
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_UP);
    	}
    	else if(str.equals("down")){
    		robot.keyPress(KeyEvent.VK_DOWN);
    		System.out.println(str);
    		robot.keyRelease(KeyEvent.VK_DOWN);
    	}
    	

    }
  
   
    
	
    
	public static void main(String[] args) {

		try {
			RobotDemo demo = new RobotDemo(
			"D:/2015Spring/Java_Project/Testing/", "png");
			Runtime.getRuntime().exec("java -jar TW.jar");
			demo.initialDemo();
		    new Thread(demo.new Driver()).start(); 
			demo.snapShot();
			int number[] = null;
			System.out.println("A: " + number.length);
		} catch (Exception ex) {
			System.out.println(ex);
		}
	}
}



